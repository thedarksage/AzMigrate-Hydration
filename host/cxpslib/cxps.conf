### cx process server conf file ###
# NOTE: default values listed are used when no value is provided
[cxps]

# host id (PS id when running as PS or MT id when running on MT in cfs mode)
id =

# ip address to use - default ANY
ip =

# non ssl port to use - required
port = 9080

# top most install dir of cx process server - defaults to cxps.conf file directory
install_dir =

# dir to use for all requests if relative paths are used - default install_dir/data
# this dir is automatically added to the allowed_dirs
request_default_dir =

# remaps <from prefix> <to prefix> when full path is used default no remapping
# separate <from prefix> and <to prefix> with white space.
# place double quotes ("") around prefix if it has spaces
# e.g. remap_full_prefix = /home/svsystems c:/home/svsystems
# note: if you set the tag, make sure to add either the from or the to path
# onto the allowed_dirs
remap_full_path_prefix =

# allowed directories defaults to /home/svsystems
# the allowed dirs that cxps can read/write/delete
# if more then one, separate with semi-colon
# e.g. /home/systems;/svsystems/cache
# notes
# 1: if remap_full_prefix option is used, as long as either the from or to are
#    on the allowed_dirs it will be fine. I.e. you do not need to add both
# 2: on windows drive letters matter as you could have the same dirname on
#    different drives but only want to allow a given dirname on a specific drive
allowed_dirs =

# exclude dirs
# exclude dirs is for excluding dirs under the allowed dirs in case you want to limit
# certain directories under the allowed dirs. In general these are subdirs of the allowed dirs.
# if you enter a relative dir (i.e. is not a full path), then that subdir will be
# excluded under all listed allowed_dris. If you have more then 1 allowed dir and want
# to exlcude a subdir under a specific allowed dir but not others, then you have to use the full path
# of the exclude dir. Basically if the base name of the full files path matches one of the exclude dir
# then it is not allowed, but still have access to subdirs. If you want to exclude a dir and all its
# subdirs (recursively) then use /* at the end of the dir (dir1/subdir1/*)
#
# e.g. with the following settings
#
# allowed_dirs = /dir1;/dir2
# exclude_dirs = xdir1;xdir2/*;/dir2/xdir3
#
# so the allow_dirs says you can access everything under /dir1 and /dir2 but the exclude_dirs
# refines it such that
#  * the first entry, xdir1, says no access to files in xdir1 under both /dir1 and /dir2 
#    so can not access files under /dir1/xdir1 and /dir2/xdir1 but can still accees subdirs
#    so files are accessible under /dir1/xdir1/subxdir1).
#  * the second entry, xdir2/*, so no access to files in xdir2 nor any of it subdirs for both 
#    /dir1 and /dir2 so can not access anything under /dir1/xdir2 nor /dir2/xdir2
#  * the third entry /dir2/xdir3, says no access to xdir3 under /dir2 only so can not access files
#    under /dir2/xdir3, but can access files under /dir1/xdir3
exclude_dirs = var/services;var/cs_db_backup;var/events;var/hosts;var/services;var/push_install_logs;etc;SystemMonitorRrds;pm;rr;transport;bin;doc;mysql;others;system;tools;rrd;storage;cache;backup_updates;admin;admin/web;admin/web/app;admin/web/cli;admin/web/ui;admin/web/cgi-bin;admin/web/config;admin/web/cs;admin/web/fabric;admin/web/ScoutAPI;admin/web/sw;admin/web/help;admin/web/inmages;admin/web/xml_rpc;admin/web/new_layout;admin/web/old_layout;transport/private;transport/Backup;

# max buffer sizes to use for reading/writing data to/from socket - default 1048576 (1MB)
max_buffer_size_bytes =

# write mode to use (0 | 1) default 0
# 0: normal buffered mode let system flush data as needed
# 1: buffered mode but flush to disk after the last write. can degrade system I/O performance
write_mode = 0

# max request handler worker threads per cpu - default 2
# NOTE: max_threads * number of cpus should be a multiple of 2, if not (i.e. if that is odd) 1 thread will be added
max_threads =

# max time between session activity before assuming other side went away - default 5 minutes
session_timeout_seconds =

# determines if paths should be created if missing [yes|no] - default no
create_paths =

# determines if cxps should copy the old file to the new file if the hard link fails when cxps is doing the final rename - default no
# this maybe needed when the old file is on a different disk then the final new file
copy_on_rename_link_failure =

# determines if cxps should do inline compression. possible values are
# pair: do inline compression if requested by putfile/renamfile requests (default if not specified)
# none: will not do inline compression, even if requested by putfile/renamefile (tmanager will do the compression)
# all: do inline compression for all diff files even if not requested
inline_compression =

### ssl ###
# NOTE: default certificate, key, and client side validation files are supplied
# it is strongly recommended that those be replaced with new ones generated on site

# ssl port to use - required
ssl_port = 9443

# ssl certificate. Default uses one from default location (only set if asked to)
ps_cert_file =

# ssl certificate fingerprint (thumbprint. Default uses the one from the default location (only set if asked to)
ps_cert_fingerprint_file =

# ssl key file. Default uses one from default location (only set if asked to)
ps_key_file =

# key_file passphrase needed to decrypt the server private key file. Required if default server
# private key file uses a passphrase.
# either enter the passphrase directly or enter an executable program that will return the passphrase
# on standard out. Prefix the fullpath to the program with 'exec:'
#
# e.g.
# just the passphrase
# key_file_passphrase = mypassphrase
#
# executable program
# key_file_passphrase = exec:/full/path/to/passphrase
#
# note: on windows make sure to include the drive letter.
# key_file_passphrase = exec:d:\full\path\to\passphrase
key_file_passphrase =

# ssl diffie-hillman file to use. Default uses one from default loction (only set if asked to)
ps_dh_file =

### CS ###
# cs ip address to use - required
cs_ip_address =

# cs port to use - default 80
cs_port =

# cs ssl port to use - default 443
cs_ssl_port =

# indicates if secure connection should be used when talking to cs. yes | no default yes secure
cs_use_secure =

# cs url default ScoutAPI/CXAPI.php (only set if asked to)
cs_url =

# cs certificate. Default uses one from default location (only set if asked to set it).
cs_cert_file =

### CFS ###
# determines if cxps should run in connection forward server (CFS) mode yes | no default no
cfs_mode =

# time cfs monitor should wait to send heartbeat. default 60 seconds
cfs_monitor_interval_seconds =

# time to wait before getting cfs connection info. default 60 seconds
cfs_get_connect_info_interval_seconds =

# time to wait before getting cfs connection info. default 60 seconds
cfs_worker_interval_seconds =

# cfs local name to use for unix domain sockets (on windows always uses loop back 127.0.0.1) 
# default /usr/local/InMage/transport/cfs.ud (only set if asked to)
cfs_local_name =

# cfs port used to connect on windows. default 90802
cfs_local_port = 

# should cxps running on ps use secure mode when logging into cpxs running in cfs mode. default yes
cfs_secure_login =

# should cfs reject non secure requests (except cfsconnect). Default yes
cfs_reject_non_secure_requests =

# cfs login retry count. default 3 
# note if connection does not succeed with in the retry count, it will be attempted again after 
# wait period
cfs_login_retry = 

# file to hold cfs connection info for local cache - default <cxps install dir>/log/cxps.cfs.cache
cfs_cache_file =

### error logging ###
# reports all errors
# error log file name - default <cxps install dir>/log/cxps.err.log
error_log =

# max size of a log file before it is truncated/rotated - default 104857600 (100MB)
error_log_max_size_bytes =

# determines number of days error log files should be kept
# rotated log files are compressed and will have the name <logfile>.<iso date time format>.log.gz
# > 0 means keep them for that many days - default 0 (i.e. there will only be the current file)
error_log_rotate_count = 3

# number of bytes to retain in the log file when the size limit is reached
# this is an approximation. slightly less maybe retained as it tries to
# cut it off at a complete entry.
# notes:
# * if rotate_count > 0, then no data is retained in the current log file
#   as all of it will be in the rotated log
# * if retain size > max size, then no data will be retained (this avoids continuously rewriting log)
# default 1048576 (1MB)
error_log_retain_size_bytes =

# enable/disable error log warnings [yes|no] - default no
# warnings are logged to the error log with a "(warning)" tag at the end
error_log_warnings_enabled =

### transfer logging ###
# transfer log contains all get/put file requests on completion the format is
#
# date<space>time<tab>request<tab>host id<tab>clientIpAddress<tab>fileName<tab>total bytes<tab>estimated time<tab>ssl indicator<tab>result
#
# ssl indicator will be yes if xfer over ssl or no xfer not over ssl
# result will be either success or failed (note if failed total bytes will be the total xferd up to the error)
# estimated time is a rough calculation, if the total bytes could fit into the initial single read buffer the time will be 0

# enable/disable xfer log at start up [yes|no] - default no
xfer_log_enabled = yes

# xfer log file name - default <install_dir>/log/cxps.xfer.log
xfer_log =

# max size of a log file before it is truncated/rotated - default 104857600 (100MB)
xfer_log_max_size_bytes =

# determines number of days xfer log files should be kept
# rotated log files are compressed and will have the name <logfile>.<iso date time format>.log.gz
# > 0 means keep them for that many days - default 3 days
xfer_log_rotate_count = 3

# number of bytes to retain in the log file when the size limit is reached
# this is an approximation. slightly less maybe retained as it tries to
# cut it off at a complete entry.
# notes:
# * if rotate_count > 0, then no data is retained in the current log file
#   as all of it will be in the rotated log
# * if retain size > max size, then no data will be retained (this avoids continuously rewriting log)
# default 1048576 (1MB)
xfer_log_retain_size_bytes =

### monitor logging ###
# monitor log will contain the time the server was started and various "key" points during
# the life time of a session and its requests depending on the monitor logging level
#
# the basic format is
#
# date<space>time<tab>what<space>(sid: n)<tab>host id<tab>client ip address<tab>request<tab>key request params tab separated
#
# 'what' is being logged will be one of:
# SERVER STARTED: cxps start time
# CREATE SESSION: session created
# START SESSION: session started
# END SESSION: session ended
# RECEIVED: session received request
# BEGIN: session request processing begins
# DONE: session has completed the request
# FAILED: session encountered an error during request processing
# PROCESSING: session is continuing to process request (request requires several network reads/writes to complete)

# enable/disable monitor log at start up [yes|no] - default no
monitor_log_enabled =

# monitor log file name - default <install_dir>/log/cxps.monitor.log
monitor_log =

# monitor logging level. default 2
# 1: logs server start, session create/start/end
# 2: level 1 plus logs request received/begin/done/failed
# 3: levels 1 and 2 plus logs request processing
monitor_log_level =

# max size of a log file before it is truncated/rotated - default 104857600 (100MB)
monitor_log_max_size_bytes =

# determines number of days error monitor log files should be kept
# rotated log files are compressed and will have the name <logfile>.<iso date time format>.log.gz
# > 0 means keep them for that many days - default 2
monitor_log_rotate_count =

# number of bytes to retain in the log file when the size limit is reached
# this is an approximation. slightly less maybe retained as it tries to
# cut it off at a complete entry.
# notes:
# * if rotate_count > 0, then no data is retained in the current log file
#   as all of it will be in the rotated log
# * if retain size > max size, then no data will be retained (this avoids continuously rewriting log)
# default 1048576 (1MB)
monitor_log_retain_size_bytes =

### tcp window size ###
# send window size - default current system setting
send_window_size_bytes =

# receive window size - default current system setting
receive_window_size_bytes =

# time in seconds how long a cnonce is valid - default 4 hours
cnonce_duration_seconds = 14400

# determines the thread pooling over http and https - default 0
# 0 means all https threads
# 1 means half http and half https threads
# 2 means all http threads
http_enabled =

### debugging ###
# WARNING: use of these could stop data transfer from working correctly
# these should only be used if told to set/add/modify them
initial_read_size =
recycle_handle_count =
delay_cfs_fwd_connect = 
